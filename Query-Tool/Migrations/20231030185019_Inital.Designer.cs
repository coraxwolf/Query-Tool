// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Query_Tool.Services;

#nullable disable

namespace Query_Tool.Migrations
{
    [DbContext(typeof(CoursesDBContext))]
    [Migration("20231030185019_Inital")]
    partial class Inital
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("Query_Tool.DTOs.CourseDTO", b =>
                {
                    b.Property<string>("SisId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Campus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("CanvasCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CanvasName")
                        .HasColumnType("TEXT");

                    b.Property<int>("Cap")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Catalog")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ClassNo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Enrolled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Mode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Semester")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Term")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("SisId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Query_Tool.DTOs.FacultyAssignmentDTO", b =>
                {
                    b.Property<string>("SisId")
                        .HasColumnType("TEXT");

                    b.Property<string>("FacultyNo")
                        .HasColumnType("TEXT");

                    b.HasKey("SisId", "FacultyNo");

                    b.ToTable("FacultyAssignment");
                });

            modelBuilder.Entity("Query_Tool.DTOs.FacultyDTO", b =>
                {
                    b.Property<string>("FacultyNo")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CanvasCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CanvasName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("FacultyNo");

                    b.ToTable("Faculty");
                });

            modelBuilder.Entity("Query_Tool.DTOs.FacultyAssignmentDTO", b =>
                {
                    b.HasOne("Query_Tool.DTOs.CourseDTO", null)
                        .WithMany("FacultyAssignments")
                        .HasForeignKey("SisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Query_Tool.DTOs.CourseDTO", b =>
                {
                    b.Navigation("FacultyAssignments");
                });
#pragma warning restore 612, 618
        }
    }
}
